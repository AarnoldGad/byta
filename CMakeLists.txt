CMAKE_MINIMUM_REQUIRED(VERSION 3.20 FATAL_ERROR)

# Read version numbers and stage from version.hpp
FILE(READ src/byta/version.hpp BYTA_VERSION_FILE)
STRING(REGEX MATCH "#define[ ]+BYTA_VERSION_MAJOR[ ]+([0-9]+)" _ ${BYTA_VERSION_FILE})
SET(BYTA_VERSION_MAJOR "${CMAKE_MATCH_1}")
STRING(REGEX MATCH "#define[ ]+BYTA_VERSION_MINOR[ ]+([0-9]+)" _ ${BYTA_VERSION_FILE})
SET(BYTA_VERSION_MINOR "${CMAKE_MATCH_1}")
STRING(REGEX MATCH "#define[ ]+BYTA_VERSION_REV[ ]+([0-9]+)" _ ${BYTA_VERSION_FILE})
SET(BYTA_VERSION_REV "${CMAKE_MATCH_1}")
STRING(REGEX MATCH "#define[ ]+BYTA_VERSION_STAGE[ ]+\"([A-Za-z]+)\"" _ ${BYTA_VERSION_FILE})
SET(BYTA_VERSION_STAGE "${CMAKE_MATCH_1}")

SET(BYTA_VERSION ${BYTA_VERSION_MAJOR}.${BYTA_VERSION_MINOR}.${BYTA_VERSION_REV})
PROJECT(BYTA_PROJECT
    VERSION ${BYTA_VERSION}
    LANGUAGES CXX)

# BYTA version is formatted as "1-2.3a"
MESSAGE(STATUS "Configuring byta ${BYTA_VERSION_MAJOR}-${BYTA_VERSION_MINOR}.${BYTA_VERSION_REV}${BYTA_VERSION_STAGE}...")

FIND_PACKAGE(Threads REQUIRED)

SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)

SET(CMAKE_DEBUG_POSTFIX -d)
SET(CMAKE_EXPORT_COMPILE_COMMANDS ON)

ADD_SUBDIRECTORY(deps/Nail)

ADD_EXECUTABLE(byta)

SET_TARGET_PROPERTIES(byta PROPERTIES
    OUTPUT_NAME byta
    VERSION ${BYTA_VERSION}
    CXX_STANDARD 17
    CXX_STANDARD_REQUIRED ON
    CXX_EXTENSIONS OFF
    FOLDER "byta")

SET(SRC_DIR "${CMAKE_CURRENT_SOURCE_DIR}/src")
SET(DEPS_DIR "${CMAKE_CURRENT_SOURCE_DIR}/deps")

TARGET_COMPILE_DEFINITIONS(byta PRIVATE
    $<$<CONFIG:Release>:NDEBUG>)

TARGET_INCLUDE_DIRECTORIES(byta PUBLIC
    "${SRC_DIR}"
    "${DEPS_DIR}/Nail/include"
    "${PROJECT_BINARY_DIR}")

TARGET_INCLUDE_DIRECTORIES(byta SYSTEM PRIVATE
    $<$<PLATFORM_ID:Linux,Darwin>:/usr/include>
    $<$<PLATFORM_ID:Linux,Darwin>:/usr/local/include>)

TARGET_SOURCES(byta PRIVATE
    ${SRC_DIR}/byta/traits.cpp
    ${SRC_DIR}/byta/tokenise.cpp

    ${SRC_DIR}/byta/main.cpp)

TARGET_LINK_DIRECTORIES(byta PRIVATE
    $<$<PLATFORM_ID:Linux,Darwin>:/usr/lib>
    $<$<PLATFORM_ID:Linux,Darwin>:/usr/local/lib>)

TARGET_LINK_LIBRARIES(byta PRIVATE
    nail

    Threads::Threads
    ${CMAKE_DL_LIBS})

